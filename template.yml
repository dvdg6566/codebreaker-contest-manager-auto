AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Parameters:
  JudgeName:
    Description: "Insert name of Codebreaker Clone"
    Type: "String"
    Default: "CodebreakerClone"

Globals:
  Function:
    Timeout: 30
    MemorySize: 1592
    Environment:
      Variables:
        judgeName: !Ref JudgeName
    Handler: app.lambda_handler
    Runtime: python3.9

Resources:
  ProblemVerificationFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: 
        Fn::Sub: ${JudgeName}-problem-verification
      CodeUri: lambda-functions/problem-verification
      Policies: 
        - AmazonDynamoDBFullAccess
        - AmazonS3ReadOnlyAccess
  RegradeProblemFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName:
        Fn::Sub: ${JudgeName}-regrade-problem
      Timeout: 300
      CodeUri: lambda-functions/regrade-problem
      Policies:
        - AmazonDynamoDBFullAccess
        - AWSStepFunctionsFullAccess
  WebsocketInvokeFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName:
        Fn::Sub: ${JudgeName}-websocket-invoke
      CodeUri: lambda-functions/websocket-invoke
      Policies:
        - AmazonAPIGatewayInvokeFullAccess
        - AmazonDynamoDBReadOnlyAccess
  WebsocketConnectionsFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName:
        Fn::Sub: ${JudgeName}-websocket-connections
      CodeUri: lambda-functions/websocket-connections
      Policies:
        - AmazonDynamoDBFullAccess
  GraderProblemInitFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName:
        Fn::Sub: ${JudgeName}-grader-problem-init
      CodeUri: lambda-functions/grader-problem-init
      Policies:
        - AmazonDynamoDBFullAccess
  GraderProblemScorerFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName:
        Fn::Sub: ${JudgeName}-grader-problem-scorer
      CodeUri: lambda-functions/grader-problem-scorer
      Policies:
        - AmazonDynamoDBFullAccess
  TestcaseGraderWrapperFunction:
    Type: AWS::Serverless::Function
    Properties:
      MemorySize: 128 # Wrapper function allocated minimal memory to minimise costs
      FunctionName:
        Fn::Sub: ${JudgeName}-testcase-grader-wrapper
      CodeUri: lambda-functions/testcase-grader-wrapper
      Policies:
        - AmazonDynamoDBFullAccess
        - AWSLambdaRole
  TestcaseGrader2048Function:
    Type: AWS::Serverless::Function
    Properties:
      MemorySize: 2590 # Larger memory to accomodate 2048MB Memory limit problems
      FunctionName:
        Fn::Sub: ${JudgeName}-testcase-grader-2048
      CodeUri: lambda-functions/testcase-grader
      Policies:
        - AmazonS3ReadOnlyAccess
  TestcaseGraderFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName:
        Fn::Sub: ${JudgeName}-testcase-grader
      CodeUri: lambda-functions/testcase-grader
      Policies:
        - AmazonS3ReadOnlyAccess
  AttachmentsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName:
        Fn::Sub: ${JudgeName}-attachments
      AccessControl: Private
      PublicAccessBlockConfiguration:
        BlockPublicAcls: True
        BlockPublicPolicy: True
        IgnorePublicAcls: True
        RestrictPublicBuckets: True
      NewerNoncurrentVersions: 0
      NoncurrentDays: 1
  TestdataBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: 
        Fn::Sub: ${JudgeName}-testdata
      AccessControl: Private
      PublicAccessBlockConfiguration:
        BlockPublicAcls: True
        BlockPublicPolicy: True
        IgnorePublicAcls: True
        RestrictPublicBuckets: True
      NewerNoncurrentVersions: 0
      NoncurrentDays: 1
  SubmissionsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: 
        Fn::Sub: ${JudgeName}-submissions
      AccessControl: Private
      PublicAccessBlockConfiguration:
        BlockPublicAcls: True
        BlockPublicPolicy: True
        IgnorePublicAcls: True
        RestrictPublicBuckets: True
      LifecycleConfiguration:
        Rules:
          - Id: clear-old-compiled
            Prefix: compiled/
            Status: Enabled
            ExpirationInDays: 1
  StatementsBucket:
    Type: AWS::S3::Bucket
    Description: Statements bucket is public to allow statements to be rendered on client-side
    Properties:
      BucketName:
        Fn::Sub: ${JudgeName}-statements
      AccessControl: PublicRead
      PublicAccessBlockConfiguration:
        BlockPublicAcls: False
        BlockPublicPolicy: False
        IgnorePublicAcls: False
        RestrictPublicBuckets: False
  GradersBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: 
        Fn::Sub: ${JudgeName}-graders
      AccessControl: Private
      PublicAccessBlockConfiguration:
        BlockPublicAcls: True
        BlockPublicPolicy: True
        IgnorePublicAcls: True
        RestrictPublicBuckets: True
  CheckersBucket: 
    Type: AWS::S3::Bucket
    Properties:
      BucketName: 
        Fn::Sub: ${JudgeName}-checkers
      AccessControl: Private
      PublicAccessBlockConfiguration:
        BlockPublicAcls: True
        BlockPublicPolicy: True
        IgnorePublicAcls: True
        RestrictPublicBuckets: True
  # WebSocketAPI:
  #   Type: AWS::ApiGatewayV2::Api
  #   Properties:
  #     Name:
  #       Fn::Join: ${JudgeName}-websocket
  #     ProtocolType: WEBSOCKET
  #     RouteSelectionExpression: "$request.body.action"